# -*- coding: utf-8 -*-
"""vbreak_hbreak_timetoplate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PLSLCyopIipr5Bfj3IWy1ACNVzmqRFRy
"""

!pip install pybaseball

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from pybaseball import statcast
pd.set_option('display.max_columns', None)

# query 2024 data
df = statcast('2024-03-28', '2024-09-29')

# get rid of warning when doing stuff with loc
df = df.copy()
# pick relevant columns
cols = ['pitch_type', 'p_throws', 'release_speed', 'release_extension', 'pfx_x', 'pfx_z', 'ax', 'az']
df = df[cols]
# drop missing data
df = df.dropna().reset_index(drop=True)
 # drop weird pitches
df = df.loc[~df['pitch_type'].isin(['CS', 'PO', 'EP', 'KN', 'FA',])]
# create pitch category col
df['pitch_category'] = df['pitch_type'].apply(lambda x: 'FASTBALL' if x in ['FF', 'SI', 'FC'] else
                                               'BREAKING' if x in ['SL', 'CU', 'ST', 'KC', 'SV', 'SC'] else
                                               'OFFSPEED' if x in ['CH', 'FS', 'FO'] else
                                               'NA')
# flip lefty horizontal movement
df.loc[df['p_throws']=='L', 'pfx_x'] = df.loc[df['p_throws']=='L', 'pfx_x']*-1
df.loc[df['p_throws']=='L', 'ax'] = df.loc[df['p_throws']=='L', 'ax']*-1
# convert to in per sec
df['release_speed_in_per_sec'] = df['release_speed'] * 17.6
# get mound to home plate distance in inches
df['distance_to_plate_in'] = 726 - (12*df['release_extension'])
# get time to plate in sec
df['time_to_plate_sec'] = df['distance_to_plate_in']/df['release_speed_in_per_sec']

df.head()

df.shape

print(round(df['release_speed'].corr(df['time_to_plate_sec'])*-1, 4))

sns.pairplot(data=df, x_vars='time_to_plate_sec', y_vars='pfx_x', kind='kde', height = 4)
plt.xlabel('Time to plate (seconds)')
plt.ylabel('Horizontal break')
plt.title('Horizontal break vs Time to plate')
plt.ylim([-2.5, 2.5])
plt.xlim([0.35, 0.55])
plt.show()

sns.pairplot(data=df.loc[df['pitch_category'] != 'OFFSPEED'], x_vars='time_to_plate_sec', y_vars='pfx_x', kind='kde', height = 4)
plt.xlabel('Time to plate (seconds)')
plt.ylabel('Horizontal break')
plt.title('Horizontal break vs Time to plate \n(No offspeed pitches)')
plt.ylim([-2.5, 2.5])
plt.xlim([0.35, 0.55])
plt.show()

df.loc[df['pfx_x'] < 0, 'pitch_category'].value_counts(normalize=True)

df.loc[df['pfx_x'] > 0, 'pitch_category'].value_counts(normalize=True)

sns.pairplot(data=df, x_vars='time_to_plate_sec', y_vars='pfx_z', kind='kde', height = 4)
plt.xlabel('Time to plate (seconds)')
plt.ylabel('Vertical break')
plt.title('Vertical break vs Time to plate')
plt.ylim([-2, 2.5])
plt.xlim([0.35, 0.55])
plt.show()

df.loc[df['pfx_z'] > 0, 'pitch_category'].value_counts(normalize=True)

df.loc[df['pfx_z'] < 0, 'pitch_category'].value_counts(normalize=True)

sns.pairplot(data=df, x_vars='pfx_x', y_vars='pfx_z', kind='kde', height = 4)
plt.xlabel('Horizontal break')
plt.ylabel('Vertical break')
plt.title('Vertical break vs Horizontal break')
plt.ylim([-2, 2.5])
plt.xlim([-2.5, 2.5])
plt.show()

sns.pairplot(data=df.loc[df['pitch_type']=='FF'], x_vars='pfx_x', y_vars='pfx_z', kind='kde', height = 4)
plt.xlabel('Horizontal break')
plt.ylabel('Vertical break')
plt.title('Vertical break vs Horizontal break (Four-Seams)')
plt.ylim([-2, 2.5])
plt.xlim([-2.5, 2.5])
plt.show()

sns.pairplot(data=df.loc[df['pitch_type']=='SI'], x_vars='pfx_x', y_vars='pfx_z', kind='kde', height = 4)
plt.xlabel('Horizontal break')
plt.ylabel('Vertical break')
plt.title('Vertical break vs Horizontal break (Sinkers)')
plt.ylim([-2, 2.5])
plt.xlim([-2.5, 2.5])
plt.show()

df[:1000].shape

sns.pairplot(data=df, x_vars='time_to_plate_sec', y_vars='ax', kind='kde', height = 4)
plt.xlabel('Time to plate (seconds)')
plt.ylabel('Horizontal acceleration')
plt.title('Horizontal acceleration vs Time to plate')
plt.ylim([-30, 25])
plt.xlim([0.35, 0.55])
plt.show()

sns.pairplot(data=df, x_vars='time_to_plate_sec', y_vars='az', kind='kde', height = 4)
plt.xlabel('Time to plate (seconds)')
plt.ylabel('Vertical acceleration (inverse)')
plt.title('Vertical acceleration vs Time to plate')
plt.ylim([-50, 0])
plt.xlim([0.35, 0.55])
plt.show()

sns.pairplot(data=df, x_vars='ax', y_vars='az', kind='kde', height = 4)
plt.xlabel('Horizontal acceleration')
plt.ylabel('Vertical acceleration')
plt.title('Vertical acceleration vs Horizontal acceleration')
plt.xlim([-30, 25])
plt.ylim([-50, 0])
plt.show()

